{"version":3,"sources":["Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Contacts/Contacts.js","App.js","index.js","Components/Contacts/ContactStyle.module.scss","Components/ContactList/ContactListStyle.module.scss"],"names":["ContactList","contacts","onRemoveContact","className","s","TaskList","map","contact","TaskList_item","name","number","TaskList_button","type","onClick","id","Filter","value","onChangeFilter","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","TaskEditor_button","Component","App","filter","addContact","task","cont","includes","alert","length","uuidv4","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","visibleContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bc4af828.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListStyle.module.scss';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={s.TaskList}>\r\n    {contacts.map(contact => (\r\n      <li className={s.TaskList_item} key={contact.id}>\r\n        {contact.name + ':' + contact.number}\r\n        {\r\n          <button\r\n            className={s.TaskList_button}\r\n            type=\"button\"\r\n            name=\"delte\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func.isRequired,\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactStyle.module.scss';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={s.TaskEditor} onSubmit={this.handleSubmit}>\r\n        <label className={s.TaskEditor_label}>\r\n          Name\r\n          <input\r\n            className={s.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.TaskEditor_label}>\r\n          Number\r\n          <input\r\n            className={s.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={s.TaskEditor_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactList from \"./Components/ContactList/ContactList\";\r\nimport Filter from \"./Components/Filter/Filter\";\r\nimport ContactForm from \"./Components/Contacts/Contacts\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  addContact = (task) => {\r\n    const searchSameName = this.state.contacts\r\n      .map((cont) => cont.name)\r\n      .includes(task.name);\r\n\r\n    if (searchSameName) {\r\n      alert(`${task.name} is already in contacts`);\r\n    } else if (task.name.length === 0) {\r\n      alert(\"Fields must be filled!\");\r\n    } else {\r\n      const contact = {\r\n        ...task,\r\n        id: uuidv4(),\r\n      };\r\n\r\n      this.setState((prevState) => ({\r\n        contacts: [...prevState.contacts, contact],\r\n      }));\r\n    }\r\n  };\r\n\r\n  changeFilter = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter((contacts) =>\r\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  removeContact = (contactId) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n\r\n        <ContactForm onAddContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        {visibleContacts.length > 1 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )}\r\n        {visibleContacts.length > 0 && (\r\n          <ContactList\r\n            contacts={visibleContacts}\r\n            onRemoveContact={this.removeContact}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n  );","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactStyle_TaskEditor__qgAT7\",\"TaskEditor_label\":\"ContactStyle_TaskEditor_label__29C8P\",\"TaskEditor_input\":\"ContactStyle_TaskEditor_input__hWXp6\",\"TaskEditorinput\":\"ContactStyle_TaskEditorinput__103Vu\",\"TaskEditor_button\":\"ContactStyle_TaskEditor_button__1qqhw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactListStyle_TaskList__2LXWi\",\"TaskList_item\":\"ContactListStyle_TaskList_item__2JiMf\",\"completed\":\"ContactListStyle_completed__2my66\",\"TaskList_text\":\"ContactListStyle_TaskList_text__3KKi4\",\"TaskList_actions\":\"ContactListStyle_TaskList_actions__1hp1p\",\"TaskList_button\":\"ContactListStyle_TaskList_button__3e4c6\"};"],"sourceRoot":""}